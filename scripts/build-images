#!/usr/bin/env bash
set -ex

cd $(dirname $0)/..

source ./scripts/version.sh

./scripts/build-image-runtime

docker tag ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} ${REGISTRY}/${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-${IMAGE_BUILD_VERSION}
docker tag ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} ${REGISTRY}/${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-${IMAGE_BUILD_VERSION}-linux-${ARCH}

awk '{print $1}' << EOF > build/images-core.txt
    ${REGISTRY}/${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}
EOF

xargs -n1 -t docker image pull --quiet << EOF >> build/images-core.txt
    ${REGISTRY}/${REPO}/hardened-kubernetes:${KUBERNETES_IMAGE_TAG}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-coredns:${COREDNS_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-etcd:${ETCD_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-k8s-metrics-server:${METRICS_SERVER_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/klipper-helm:${KLIPPER_HELM_VERSION}
    ${REGISTRY}/${REPO}/pause:${PAUSE_VERSION}
    ${REGISTRY}/${REPO}/mirrored-jettech-kube-webhook-certgen:${JETTECH_VERSION}
    ${REGISTRY}/${REPO}/nginx-ingress-controller:${NGINX_INGRESS_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/rke2-cloud-provider:${CCM_VERSION}-${IMAGE_BUILD_VERSION}
EOF

xargs -n1 -t docker image pull --quiet << EOF > build/images-canal.txt
    ${REGISTRY}/${REPO}/hardened-calico:${CALICO_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-flannel:${FLANNEL_VERSION}-${IMAGE_BUILD_VERSION}
EOF

xargs -n1 -t docker image pull --quiet << EOF > build/images-cilium.txt
    ${REGISTRY}/${REPO}/mirrored-cilium-cilium:${CILIUM_VERSION}
    ${REGISTRY}/${REPO}/mirrored-cilium-operator-aws:${CILIUM_VERSION}
    ${REGISTRY}/${REPO}/mirrored-cilium-operator-azure:${CILIUM_VERSION}
    ${REGISTRY}/${REPO}/mirrored-cilium-operator-generic:${CILIUM_VERSION}
    ${REGISTRY}/${REPO}/mirrored-cilium-startup-script:${CILIUM_STARTUP_SCRIPT_VERSION}
EOF

xargs -n1 -t docker image pull --quiet << EOF > build/images-calico.txt
    ${REGISTRY}/${REPO}/mirrored-calico-operator:${CALICO_OPERATOR_VERSION}
    ${REGISTRY}/${REPO}/mirrored-calico-ctl:${CALICO_VERSION}
    ${REGISTRY}/${REPO}/mirrored-calico-kube-controllers:${CALICO_VERSION}
    ${REGISTRY}/${REPO}/mirrored-calico-typha:${CALICO_VERSION}
    ${REGISTRY}/${REPO}/mirrored-calico-node:${CALICO_VERSION}
    ${REGISTRY}/${REPO}/mirrored-calico-pod2daemon-flexvol:${CALICO_VERSION}
    ${REGISTRY}/${REPO}/mirrored-calico-cni:${CALICO_VERSION}
EOF

if [ "${ARCH}" = "amd64" ]; then
xargs -n1 -t docker image pull --quiet << EOF > build/images-vsphere.txt
${REGISTRY}/${REPO}/mirrored-cloud-provider-vsphere-cpi-release-manager:${VSPHERE_CPI_VERSION}
${REGISTRY}/${REPO}/mirrored-cloud-provider-vsphere-csi-release-driver:${VSPHERE_CSI_VERSION}
${REGISTRY}/${REPO}/mirrored-cloud-provider-vsphere-csi-release-syncer:${VSPHERE_CSI_VERSION}
${REGISTRY}/${REPO}/mirrored-k8scsi-csi-attacher:${K8SCSI_CSI_ATTACHER_VERSION}
${REGISTRY}/${REPO}/mirrored-k8scsi-csi-node-driver-registrar:${K8SCSI_CSI_NODE_DRIVER_VERSION}
${REGISTRY}/${REPO}/mirrored-k8scsi-csi-provisioner:${K8SCSI_CSI_PROVISIONER_VERSION}
${REGISTRY}/${REPO}/mirrored-k8scsi-csi-resizer:${K8SCSI_CSI_RESIZER_VERSION}
${REGISTRY}/${REPO}/mirrored-k8scsi-livenessprobe:${K8SCSI_CSI_LIVENESSPROBE_VERSION}
EOF
fi

xargs -n1 -t docker image pull --quiet << EOF > build/images-multus.txt
    ${REGISTRY}/${REPO}/hardened-multus-cni:${MULTUS_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-cni-plugins:${CNI_PLUGINS_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-sriov-network-operator:${SRIOV_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-sriov-network-config-daemon:${SRIOV_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-sriov-network-device-plugin:${SRIOV_DEVICE_PLUGIN_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-sriov-cni:${SRIOV_CNI_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-ib-sriov-cni:${SRIOV_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-sriov-network-resources-injector:${SRIOV_RESOURCES_INJECTOR_VERSION}-${IMAGE_BUILD_VERSION}
    ${REGISTRY}/${REPO}/hardened-sriov-network-webhook:${SRIOV_VERSION}-${IMAGE_BUILD_VERSION}
EOF

# Continue to provide a legacy airgap archive set with the default CNI images
cat build/images-core.txt build/images-canal.txt > build/images.txt
